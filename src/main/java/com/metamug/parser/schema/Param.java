//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2016.04.19 at 06:43:03 PM IST
//
package com.metamug.parser.schema;

import com.metamug.parser.service.ParserService;
import java.io.IOException;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import javax.xml.xpath.XPathExpressionException;

/**
 *
 * To perform validation on the parameters received.
 *
 *
 * <p>
 * Java class for param complex type.
 *
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="param">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="name" use="required" type="{http://xml.metamug.net/resource/1.0}paramName" />
 *       &lt;attribute name="required" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="max" type="{http://www.w3.org/2001/XMLSchema}double" />
 *       &lt;attribute name="min" type="{http://www.w3.org/2001/XMLSchema}double" />
 *       &lt;attribute name="maxlength" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="minlength" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="pattern" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="exists" type="{http://xml.metamug.net/resource/1.0}exists" />
 *       &lt;attribute name="value" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="type" use="required" type="{http://xml.metamug.net/resource/1.0}paramType" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "param")
public class Param extends RequestTag {

    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "max")
    protected Double max;
    @XmlAttribute(name = "min")
    protected Double min;
    @XmlAttribute(name = "maxlength")
    protected Integer maxlength;
    @XmlAttribute(name = "minlength")
    protected Integer minlength;
    @XmlAttribute(name = "pattern")
    protected String pattern;
    @XmlAttribute(name = "exists")
    protected String exists;
    @XmlAttribute(name = "value")
    protected String value;
    @XmlAttribute(name = "testvalue")
    protected String testvalue;
    @XmlAttribute(name = "type", required = true)
    protected ParamType type;
    @XmlAttribute(name = "required")
    protected boolean required;

    /**
     * Gets the value of the name property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     *
     * @param paramName allowed object is {@link String }
     *
     */
    public void setName(String paramName) {
        this.name = paramName;
    }

    /**
     * Gets the value of the max property.
     *
     * @return possible object is {@link Double }
     *
     */
    public Double getMax() {
        return max;
    }

    /**
     * Sets the value of the max property.
     *
     * @param max allowed object is {@link Double }
     *
     */
    public void setMax(Double max) {
        this.max = max;
    }

    /**
     * Gets the value of the min property.
     *
     * @return possible object is {@link Double }
     *
     */
    public Double getMin() {
        return min;
    }

    /**
     * Sets the value of the min property.
     *
     * @param min allowed object is {@link Double }
     *
     */
    public void setMin(Double min) {
        this.min = min;
    }

    /**
     * Gets the value of the maxlength property.
     *
     * @return possible object is {@link Integer }
     *
     */
    public Integer getMaxlength() {
        return maxlength;
    }

    /**
     * Sets the value of the maxlength property.
     *
     * @param maxLen allowed object is {@link Integer }
     *
     */
    public void setMaxlength(Integer maxLen) {
        this.maxlength = maxLen;
    }

    /**
     * Gets the value of the minlength property.
     *
     * @return possible object is {@link Integer }
     *
     */
    public Integer getMinlength() {
        return minlength;
    }

    /**
     * Sets the value of the minlength property.
     *
     * @param minLen allowed object is {@link Integer }
     *
     */
    public void setMinlength(Integer minLen) {
        this.minlength = minLen;
    }

    /**
     * Gets the value of the pattern property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getPattern() {
        return pattern;
    }

    /**
     * Sets the value of the pattern property.
     *
     * @param regexPattern allowed object is {@link String }
     *
     */
    public void setPattern(String regexPattern) {
        this.pattern = regexPattern;
    }

    /**
     * Gets the value of the exists property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getExists() {
        return exists;
    }

    /**
     * Sets the value of the exists property.
     *
     * @param columnName allowed object is {@link String }
     *
     */
    public void setExists(String columnName) {
        this.exists = columnName;
    }

    /**
     * Gets the value of the value property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the testvalue property.
     *
     * @return possible object is {@link String }
     *
     */
    public String getTestvalue() {
        return testvalue;
    }

    /**
     * Sets the value of the testvalue property.
     *
     * @param value allowed object is {@link String }
     *
     */
    public void setTestvalue(String value) {
        this.testvalue = value;
    }

    /**
     * Gets the value of the type property.
     *
     * @return possible object is {@link ParamType }
     *
     */
    public ParamType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     *
     * @param inputType allowed object is {@link ParamType }
     *
     */
    public void setType(ParamType inputType) {
        this.type = inputType;
    }

    /**
     * Sets the value of the required property.
     *
     * @param isRequired
     */
    public void setRequired(boolean isRequired) {
        this.required = isRequired;
    }

    /**
     * Gets the value of the required property.
     *
     * @return
     */
    public boolean isRequired() {
        return this.required;
    }

    @Override
    public void print(XMLStreamWriter writer, Object tag, ParserService parent) throws XMLStreamException, IOException, XPathExpressionException {
     
        Param param = (Param)tag;
        writer.writeCharacters(System.lineSeparator());
        writeUnescapedCharacters(writer, processParam(param), parent.output);
    }
    
    private String processParam(Param param) {
        StringBuilder builder = new StringBuilder();
        builder.append("<m:param name=\"").append(param.getName()).append("\" ");
        if (param.getType() != null) {
            builder.append("type=\"").append(param.getType()).append("\" ");
        }
        builder.append("value=\"").append("${mtgReq.params['").append(param.getName()).append("']}\" ");
        if (param.getMax() != null) {
            builder.append("max=\"").append(param.getMax()).append("\" ");
        }
        if (param.getMaxlength() != null) {
            builder.append("maxLen=\"").append(param.getMaxlength()).append("\" ");
        }
        if (param.getMin() != null) {
            builder.append("min=\"").append(param.getMin()).append("\" ");
        }
        if (param.getMinlength() != null) {
            builder.append("minLen=\"").append(param.getMinlength()).append("\" ");
        }
        if (param.getPattern() != null) {
            builder.append("pattern=\"").append(param.getPattern()).append("\" ");
        }
        if (param.getExists() != null) {
            builder.append("exists=\"").append(param.getExists()).append("\" ");
        }
        if (param.getValue() != null) {
            builder.append("defaultValue=\"").append(param.getValue()).append("\" ");
        }
        if (param.isRequired()) {
            builder.append("isRequired=\"true\"");
        }
        builder.append("/>");
        return builder.toString();
    }

}
