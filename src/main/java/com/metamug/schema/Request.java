//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2016.01.07 at 10:53:17 AM IST
//
package com.metamug.schema;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "request", propOrder = {
    "desc",
    "paramOrSqlOrExecuteOrXrequestOrScript",
    "param",
    "execute",
    "sql",
    "transaction",
    "xrequest",
    "script"
})
public class Request {

    @XmlElement(name = "Desc")
    protected String desc;
    @XmlElement(name = "Param")
    protected List<Param> param;
    
    protected List<Execute> execute;
    protected List<Xrequest> xrequest;
    protected List<Script> script;
    protected List<Transaction> transaction;
    protected List<Sql> sql;
    
    @XmlElements({
        @XmlElement(name = "Param", type = Param.class),
        @XmlElement(name = "Sql", type = Sql.class),
        @XmlElement(name = "Transaction", type = Transaction.class),
        @XmlElement(name = "Execute", type = Execute.class),
        @XmlElement(name = "XRequest", type = Xrequest.class),
        @XmlElement(name = "Script", type = Script.class)
    })
    protected List paramOrSqlOrExecuteOrXrequestOrScript;

    @XmlAttribute(name = "status")
    protected Integer status;
    @XmlAttribute(name = "method")
    protected Method method;
    @XmlAttribute(name = "item")
    protected Boolean item;

    public Request() {
    }

    public Request(Method method) {
        this.method = method;
    }

    public Set<Param> getParam() {
        if (param == null) {
            Set<Param> paramSet = new HashSet<>();
            return paramSet;
        } else {
            Map<String, Param> paramMap = new HashMap<>();
            param.forEach((Param param1) -> {
                paramMap.put(param1.name, param1);
            });
            Set<Param> paramSet = new HashSet<>();
            paramSet.addAll(paramMap.values());
            return paramSet;
        }
    }

    public List<Execute> getExecute() {
        execute = new ArrayList<>();
        for (Object object : paramOrSqlOrExecuteOrXrequestOrScript) {
            if (object instanceof Execute) {
                execute.add((Execute) object);
            }
        }
        return execute;
    }
    
    public List<Script> getScript() {
        script = new ArrayList<>();
        for (Object object : paramOrSqlOrExecuteOrXrequestOrScript) {
            if (object instanceof Script) {
                script.add((Script) object);
            }
        }
        return script;
    }
    
    public List<Transaction> getTransaction() {
        transaction = new ArrayList<>();
        for (Object object : paramOrSqlOrExecuteOrXrequestOrScript) {
            if (object instanceof Transaction) {
                transaction.add((Transaction) object);
            }
        }
        return transaction;
    }

    public List<Sql> getSql() {
        sql = new ArrayList<>();
        for (Object object : paramOrSqlOrExecuteOrXrequestOrScript) {
            if (object instanceof Sql) {
                sql.add((Sql) object);
            }
        }
        return sql;
    }

    public List<Xrequest> getXRequest() {
        xrequest = new ArrayList<>();
        for (Object object : paramOrSqlOrExecuteOrXrequestOrScript) {
            if (object instanceof Xrequest) {
                xrequest.add((Xrequest) object);
            }
        }
        return xrequest;
    }

    public List getParamOrSqlOrExecuteOrXrequestOrScript() {
        if (paramOrSqlOrExecuteOrXrequestOrScript == null) {
            paramOrSqlOrExecuteOrXrequestOrScript = new ArrayList<>();
        }
        return this.paramOrSqlOrExecuteOrXrequestOrScript;
    }

    public String getDesc() {
        return desc;
    }

    public void setDesc(String value) {
        this.desc = value;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer value) {
        this.status = value;
    }

    public Method getMethod() {
        return method;
    }

    public void setMethod(Method value) {
        this.method = value;
    }

    public boolean isItem() {
        if (item == null) {
            return false;
        } else {
            return item;
        }
    }

    public void setItem(Boolean value) {
        this.item = value;
    }
}